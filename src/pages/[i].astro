---
import { fade, slide } from "astro:transitions";

const pages = [
    { i: 1, src: "/src/assets/-01.webp" },
    { i: 2, src: "/src/assets/-02.webp" },
    { i: 3, src: "/src/assets/-03.webp" },
    { i: 4, src: "/src/assets/-04.webp" },
    { i: 5, src: "/src/assets/-05.webp" },
    { i: 6, src: "/src/assets/-06.webp" },
    { i: 7, src: "/src/assets/-07.webp" },
    { i: 8, src: "/src/assets/-08.webp" },
    { i: 9, src: "/src/assets/-09.webp" },
    { i: 10, src: "/src/assets/-10.webp" },
    { i: 11, src: "/src/assets/-11.webp" },
    { i: 12, src: "/src/assets/-12.webp" },
    { i: 13, src: "/src/assets/-13.webp" },
    { i: 14, src: "/src/assets/-14.webp" },
    { i: 15, src: "/src/assets/-15.webp" },
    { i: 16, src: "/src/assets/-16.webp" },
    { i: 17, src: "/src/assets/-17.webp" },
    { i: 18, src: "/src/assets/-18.webp" },
    { i: 19, src: "/src/assets/-19.webp" },
    { i: 20, src: "/src/assets/-20.webp" },
    { i: 21, src: "/src/assets/-21.webp" },
    { i: 22, src: "/src/assets/-22.webp" },
    { i: 23, src: "/src/assets/-23.webp" },
    { i: 24, src: "/src/assets/-24.webp" },
    { i: 25, src: "/src/assets/-25.webp" },
    { i: 26, src: "/src/assets/-26.webp" },
    { i: 27, src: "/src/assets/-27.webp" },
    { i: 28, src: "/src/assets/-28.webp" },
    { i: 29, src: "/src/assets/-29.webp" },
    { i: 30, src: "/src/assets/-30.webp" },
    { i: 31, src: "/src/assets/-31.webp" },
    { i: 32, src: "/src/assets/-32.webp" },
    { i: 33, src: "/src/assets/-33.webp" },
];
import type { ImageMetadata } from "astro";
import Layout from "../layouts/Layout.astro";

const images = import.meta.glob<{ default: ImageMetadata }>("/src/assets/*");
const { i } = Astro.params;
const dir = !!Number(new URL(Astro.request.url).searchParams.get("dir") ?? 1);
if (!i) return Astro.redirect("/404");
let index = Number(i);
if (index <= 0) return Astro.redirect("/" + (pages.length - 1).toString());
if (index >= pages.length) return Astro.redirect("/1");
const test = pages.find((p) => p.i === index);
/* const test2 = pages.find((p) => p.i === index + 1); */
if (!test || !images[test.src]) return Astro.redirect("/404");

const img1 = await images[test.src]();

const animation = dir ? "anime-in" : "anime-in-b";
---

<Layout title="MAGAZINE">
    <main class="container">
        <button class="nav-button left"></button>
        <img
            id="img"
            class=`full-screen-image ${animation}`
            src={img1.default.src}
            alt="test failed"
        />
        <button class="nav-button right"></button>
    </main>
    <script>
        import { navigate } from "astro:transitions/client";
        const flipOutYKeyframes = [
            { transform: "perspective(400px)", opacity: 1 },
            { opacity: 0, offset: 0.5 },
            {
                transform: "perspective(400px) rotate3d(0, 1, 0, -180deg)",
                opacity: 0,
            },
        ];

        // Define animation options
        const flipOutYOptions: Partial<KeyframeAnimationOptions> = {
            duration: 1000, // Animation duration in milliseconds
            fill: "forwards", // Keep the final state of the animation
            easing: "ease", // Easing function
        };

        const flipOutYBKeyframes = [
            { transform: "perspective(400px)", opacity: 1 },
            { opacity: 0, offset: 0.5 }, // Use offset to specify the keyframe at 85%
            {
                transform: "perspective(400px) rotate3d(0, 1, 0, 180deg)",
                opacity: 0,
            },
        ];

        // Define animation options
        const flipOutYBOptions: Partial<KeyframeAnimationOptions> = {
            duration: 1000, // Animation duration in milliseconds
            fill: "forwards", // Keep the final state of the animation
            easing: "ease", // Easing function
        };
        document.addEventListener("astro:page-load", () => {
            const img = document.getElementById("img");

            document
                .querySelector(".left")
                .addEventListener("click", () => changePage(false));
            document
                .querySelector(".right")
                .addEventListener("click", () => changePage(true));

            function changePage(dir: boolean) {
                if (!dir) {
                    const anime = img.animate(
                        flipOutYBKeyframes,
                        flipOutYBOptions,
                    );
                    anime.onfinish = () =>
                        navigate(
                            (
                                Number(window.location.pathname.slice(1)) - 1
                            ).toString() + "?dir=0",
                        );
                } else {
                    const anime = img.animate(
                        flipOutYKeyframes,
                        flipOutYOptions,
                    );
                    anime.onfinish = () =>
                        navigate(
                            (
                                Number(window.location.pathname.slice(1)) + 1
                            ).toString() + "?dir=1",
                        );
                }
            }

/*             function checkImageComplete() {
                prefetch(
                    (Number(window.location.pathname.slice(1)) + 1).toString(),
                );
            }
            img.addEventListener("onload", checkImageComplete); */
        });
    </script>
</Layout>
<style>
    .left {
        left: 0;
    }
    .right {
        right: 0;
    }
    .nav-button {
        position: absolute;
        height: 100%;
        width: 50vw;
        background-color: transparent;
        cursor: pointer;
        border: none;
        outline: none;
        z-index: 100;
    }

    .container {
        display: flex;
        width: 100%;
    }

    .full-screen-image {
        width: 100%;
        height: 100vh; /* Full height of the viewport */
        object-fit: contain;
    }

    @-webkit-keyframes flipInY {
        from {
            -webkit-transform: perspective(400px) rotate3d(0, 1, 0, 90deg);
            transform: perspective(400px) rotate3d(0, 1, 0, 90deg);
            -webkit-animation-timing-function: ease-in;
            animation-timing-function: ease-in;
            opacity: 0;
        }

        80% {
            -webkit-transform: perspective(400px) rotate3d(0, 1, 0, 0deg);
            transform: perspective(400px) rotate3d(0, 1, 0, 0deg);
        }

        to {
            -webkit-transform: perspective(400px);
            transform: perspective(400px);
            opacity: 1;
        }
    }
    @keyframes flipInY {
        from {
            -webkit-transform: perspective(400px) rotate3d(0, 1, 0, 90deg);
            transform: perspective(400px) rotate3d(0, 1, 0, 90deg);
            -webkit-animation-timing-function: ease-in;
            animation-timing-function: ease-in;
            opacity: 0;
        }

        80% {
            -webkit-transform: perspective(400px) rotate3d(0, 1, 0, 0deg);
            transform: perspective(400px) rotate3d(0, 1, 0, 0deg);
        }

        to {
            -webkit-transform: perspective(400px);
            transform: perspective(400px);
            opacity: 1;
        }
    }
    @keyframes flipInYB {
        from {
            -webkit-transform: perspective(400px) rotate3d(0, 1, 0, -90deg);
            transform: perspective(400px) rotate3d(0, 1, 0, -90deg);
            -webkit-animation-timing-function: ease-in;
            animation-timing-function: ease-in;
            opacity: 0;
        }

        80% {
            -webkit-transform: perspective(400px) rotate3d(0, 1, 0, 0deg);
            transform: perspective(400px) rotate3d(0, 1, 0, 0deg);
        }

        to {
            -webkit-transform: perspective(400px);
            transform: perspective(400px);
            opacity: 1;
        }
    }
    @-webkit-keyframes flipOutY {
        from {
            -webkit-transform: perspective(400px);
            transform: perspective(400px);
        }
        85% {
            opacity: 0;
        }

        to {
            -webkit-transform: perspective(400px) rotate3d(0, 1, 0, -180deg);
            transform: perspective(400px) rotate3d(0, 1, 0, -180deg);
            opacity: 0;
        }
    }
    .anime-in {
        animation: flipInY 1s ease-in-out forwards;
    }
    .anime-in-b {
        animation: flipInYB 1s ease-in-out forwards;
    }

    @keyframes flipOutY {
        from {
            -webkit-transform: perspective(400px);
            transform: perspective(400px);
        }
        50% {
            opacity: 0;
        }

        to {
            -webkit-transform: perspective(400px) rotate3d(0, 1, 0, -180deg);
            transform: perspective(400px) rotate3d(0, 1, 0, -180deg);
            opacity: 0;
        }
    }

    @keyframes flipOutYB {
        from {
            -webkit-transform: perspective(400px);
            transform: perspective(400px);
        }
        85% {
            opacity: 0;
        }

        to {
            -webkit-transform: perspective(400px) rotate3d(0, 1, 0, 180deg);
            transform: perspective(400px) rotate3d(0, 1, 0, 180deg);
            opacity: 0;
        }
    }
</style>
